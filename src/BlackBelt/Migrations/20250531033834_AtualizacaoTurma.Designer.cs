// <auto-generated />
using System;
using BlackBelt.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlackBelt.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250531033834_AtualizacaoTurma")]
    partial class AtualizacaoTurma
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlackBelt.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Dt_Matricula")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Dt_Nascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Faixa")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Faixa");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("BlackBelt.Models.Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Dt_Aula")
                        .HasColumnType("date");

                    b.Property<int>("Id_Aluno")
                        .HasColumnType("int");

                    b.Property<int>("Id_Turma")
                        .HasColumnType("int");

                    b.Property<int>("Presenca")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Aluno");

                    b.HasIndex("Id_Turma");

                    b.ToTable("Aulas");
                });

            modelBuilder.Entity("BlackBelt.Models.Faixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Faixas");
                });

            modelBuilder.Entity("BlackBelt.Models.Habilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Habilidades");
                });

            modelBuilder.Entity("BlackBelt.Models.HabilidadeAluno", b =>
                {
                    b.Property<int>("Id_Aluno")
                        .HasColumnType("int");

                    b.Property<int>("Id_Habilidade")
                        .HasColumnType("int");

                    b.HasIndex("Id_Aluno");

                    b.HasIndex("Id_Habilidade");

                    b.ToTable("HabilidadesAluno");
                });

            modelBuilder.Entity("BlackBelt.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dt_Login")
                        .HasColumnType("datetime2");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("BlackBelt.Models.ProgressoGeral", b =>
                {
                    b.Property<double>("DesempenhoMedio")
                        .HasColumnType("float");

                    b.Property<DateOnly>("Dt_Avaliacao")
                        .HasColumnType("date");

                    b.Property<int>("Id_Aluno")
                        .HasColumnType("int");

                    b.HasIndex("Id_Aluno");

                    b.ToTable("ProgressosGerais");
                });

            modelBuilder.Entity("BlackBelt.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("Horario")
                        .HasColumnType("time");

                    b.Property<int>("Id_Instrutor")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Instrutor");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("BlackBelt.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Dt_Nascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo_Usuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BlackBelt.Models.Aluno", b =>
                {
                    b.HasOne("BlackBelt.Models.Faixa", "Faixa")
                        .WithMany()
                        .HasForeignKey("Id_Faixa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faixa");
                });

            modelBuilder.Entity("BlackBelt.Models.Aula", b =>
                {
                    b.HasOne("BlackBelt.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("Id_Aluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlackBelt.Models.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("Id_Turma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("BlackBelt.Models.HabilidadeAluno", b =>
                {
                    b.HasOne("BlackBelt.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("Id_Aluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlackBelt.Models.Habilidade", "Habilidade")
                        .WithMany()
                        .HasForeignKey("Id_Habilidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Habilidade");
                });

            modelBuilder.Entity("BlackBelt.Models.Login", b =>
                {
                    b.HasOne("BlackBelt.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BlackBelt.Models.ProgressoGeral", b =>
                {
                    b.HasOne("BlackBelt.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("Id_Aluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("BlackBelt.Models.Turma", b =>
                {
                    b.HasOne("BlackBelt.Models.Usuario", "Instrutor")
                        .WithMany()
                        .HasForeignKey("Id_Instrutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrutor");
                });
#pragma warning restore 612, 618
        }
    }
}
